=========================================================================
=
= Functional Arrays
=
=========================================================================

Functional Arrays provides a set of prototype extensions to Javascripts
Array object that help facilitate functional programming.

The prototype extensions consist of six methods that allow for different
iterations over an Array. Three of the methods will modify the contents
of the Array while the other three methods are non-modifying. 

--------------------------------------------------------------------------

The three modifying methods are apply, apply_range, and apply_index.

apply:
    applies an action to each element of the Array storing the result
  of action in the element. 

    Array.prototype.apply = function (action)

  example:


apply_range:
    applies an action to the elements in the specified range of
  the Array storing the result of action in the element.

    Array.prototype.apply_range = function (begin, end, action)

  example:


apply_index:
    applies an action to the elements specified in the indices
  array storing the result of action in the element.

    Array.prototype.apply_index = function (indices, action)

  example:


--------------------------------------------------------------------------

The three non-modifying methods are for_Each, for_each_range, and
for_each_index.

for_each:
  runs action for each element of the Array.

    Array.prototype.for_each = function (action)

  example:


for_each_range:
  runs action for each element in the specified range of the
Array.

    Array.prototype.for_each_range = function (begin, end, action)

  example:


for_each_index:
  runs action for each of the elements specified in the
indices array.

    Array.prototype.for_each_index = function (indices, action)

  example:


--------------------------------------------------------------------------

Functional Arrays also provides a sliceArguments function that will
provide an alice of the arguments back as an Array. This method is
necessary since the arguments object does not provide a slice operation.

=========================================================================

Copyright (C) 2011 Thomas P. Lahoda

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  
02110-1301  USA

